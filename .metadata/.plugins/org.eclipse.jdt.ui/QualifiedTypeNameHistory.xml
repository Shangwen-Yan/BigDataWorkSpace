<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.junit.Test"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.client.HTable"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.client.Scan"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.client.ResultScanner"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="com.yammer.metrics.core.HealthCheck.Result"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.client.Result"/>
<fullyQualifiedTypeName name="java.lang.StringBuffer"/>
<fullyQualifiedTypeName name="java.util.NavigableMap"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.RowFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.Filter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.CompareFilter.CompareOp"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.BinaryComparator"/>
<fullyQualifiedTypeName name="java.lang.String"/>
<fullyQualifiedTypeName name="org.glassfish.grizzly.servlet.ver30.String"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.PrefixFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.KeyOnlyFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.RandomRowFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.InclusiveStopFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.FirstKeyOnlyFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.ColumnPrefixFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.ValueFilter"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.RegexStringComparator"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.SingleColumnValueFilter"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.FilterList.Operator"/>
<fullyQualifiedTypeName name="org.apache.hadoop.hbase.filter.FilterList"/>
<fullyQualifiedTypeName name="java.sql.DriverManager"/>
<fullyQualifiedTypeName name="java.sql.Connection"/>
<fullyQualifiedTypeName name="java.sql.Statement"/>
<fullyQualifiedTypeName name="java.sql.ResultSet"/>
<fullyQualifiedTypeName name="java.util.Properties"/>
<fullyQualifiedTypeName name="kafka.javaapi.producer.Producer"/>
<fullyQualifiedTypeName name="kafka.producer.KeyedMessage"/>
<fullyQualifiedTypeName name="kafka.producer.ProducerConfig"/>
<fullyQualifiedTypeName name="kafka.javaapi.consumer.ConsumerConnector"/>
<fullyQualifiedTypeName name="kafka.consumer.Consumer"/>
<fullyQualifiedTypeName name="kafka.consumer.ConsumerConfig"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="kafka.consumer.KafkaStream"/>
<fullyQualifiedTypeName name="kafka.consumer.ConsumerIterator"/>
<fullyQualifiedTypeName name="backtype.storm.topology.base.BaseRichSpout"/>
<fullyQualifiedTypeName name="backtype.storm.spout.SpoutOutputCollector"/>
<fullyQualifiedTypeName name="backtype.storm.task.OutputCollector"/>
<fullyQualifiedTypeName name="backtype.storm.tuple.Values"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="clojure.main"/>
<fullyQualifiedTypeName name="cn.tarena.storm.SentenceSpout"/>
<fullyQualifiedTypeName name="cn.tarena.storm.SplitSentenceBolt"/>
<fullyQualifiedTypeName name="cn.tarena.storm.WordCountBolt"/>
<fullyQualifiedTypeName name="cn.tarena.storm.ReportBolt"/>
<fullyQualifiedTypeName name="backtype.storm.topology.TopologyBuilder"/>
<fullyQualifiedTypeName name="backtype.storm.tuple.Fields"/>
<fullyQualifiedTypeName name="backtype.storm.generated.StormTopology"/>
<fullyQualifiedTypeName name="backtype.storm.StormSubmitter"/>
<fullyQualifiedTypeName name="backtype.storm.Config"/>
<fullyQualifiedTypeName name="backtype.storm.LocalCluster"/>
<fullyQualifiedTypeName name="javax.servlet.annotation.WebServlet"/>
</qualifiedTypeNameHistroy>
